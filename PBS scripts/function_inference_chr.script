#!/bin/bash
#SBATCH --job-name=chr20
#SBATCH -A=ud84
#SBATCH --time=40:00:00
#SBATCH --ntasks=2
#SBATCH --mem-per-cpu=220000
#SBATCH --cpus-per-task=2

source extngocduyt/miniconda/bin/activate
conda activate jupyterlab
module load bedtools 



# # Change to the temporary folder cretated for this job on the comp node
# cd Python\ scripts/bedtools_merging/Validation

# # Download the required files to the folder

#     # Download homo-sapiens data
# wget https://ftp.ensembl.org/pub/release-110/variation/vcf/homo_sapiens/homo_sapiens-chr20.vcf.gz
# gunzip homo_sapiens-chr20.vcf.gz
#     # Download ncer and lift ncer scores
#             # Download the ncer scores
# cd ~/ud84_scratch
# cd Python\ scripts/continuous_merging
# wget https://telentilab-dataset.s3.amazonaws.com/ncER/v2/Bin_1bp/ncER_perc_chr20_coordSorted.txt.gz
# gunzip ncER_perc_chr20_coordSorted.txt.gz
# mv ncER_perc_chr20_coordSorted.txt ~/ud84_scratch/lift
#         # liftover ncer
# cd ~/ud84_scratch
# cd lift
# chmod +x liftOver
# ./liftOver ncER_perc_chr20_coordSorted.txt hg19ToHg38.over.chain.gz ncer_transformed_chr20.bed unMapped
# mv ncer_transformed_chr20.bed ~/ud84_scratch/Python\ scripts/continuous_merging
#     # Download dickel dataset, already done


# # merge with bedtools for categorical and continuous variables
#     # categorical variables
#     # once finished running, output_even and output_odd located at /bedtools_merging/Validation merging test/chr20/
#     # desired file: should be output_even.txt
# cd ~/ud84_scratch
# cd Python\ scripts/bedtools_merging
# # python mcri_merging_categorical.py > logging/chr20_print_logging.txt
# python mcri_merging_categorical.py -c chr20 -p 4796340 > logging/chr20_print_logging.txt 


#     # continuous variables
#         # copy the validation file: validation_chr20.txt (simple version) to continuous_merging 
# cp Validation/validation_chr20.txt ~/ud84_scratch/Python\ scripts/continuous_merging
#         # bedtools intersect with ncer scores
# cd ~/ud84_scratch
# cd Python\ scripts/continuous_merging
# bedtools intersect -loj -a validation_chr20.txt -b ncer_transformed_chr20.bed > chr20_ncer.txt
# cd ..
# python drop_dups_continuous.py -c chr20 > logging/chr20_ncer_dups.txt
# cd continuous_merging

#         # bedtools intersect with dickel scores
# bedtools intersect -loj -a validation_chr20.txt -b unfiltered_hg38.bed > dickel_chr20.txt

#     # merge continuous with categorical
#         # cut the columns from dickel and ncer to merge with the merged categorical and continuous version: output_even
cd ~/ud84_scratch
cd Python\ scripts/bedtools_merging/Validation\ merging\ test
# cp chr20/output_even.txt ~/ud84_scratch/Python\ scripts/continuous_merging
cd ../../continuous_merging
# mv output_even.txt chr20_categorical.txt

# paste -d"\t" chr20_categorical.txt <(cut -f7 chr20_ncer_drop_dups.txt) > chr20_cat_ncer.txt
# paste -d"\t" chr20_cat_ncer.txt <(cut -f7 dickel_chr20.txt) > chr20_final_ncer_dickel.txt
# mv chr20_final_ncer_dickel.txt ../chromosome_data/chr20_final_ncer_dickel.txt

cd ..
# run the actual inference to the applied dataset
python inference.py -c chr20 > logging/inference_logging_chr20.txt




